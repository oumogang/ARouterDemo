if (!rootProject.ext.asApp.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        if (!rootProject.ext.asApp.toBoolean()) {
            applicationId "com.omg.arouter"
        }

        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // ARouter set module name
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
//            minifyEnabled true //开启混淆
            minifyEnabled rootProject.ext.android.minifyEnabled
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // enable dataBinding for mvvm
    dataBinding{
        enabled true
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraint
    androidTestImplementation rootProject.ext.dependencies.espresso
    testImplementation rootProject.ext.dependencies.junit
    androidTestImplementation rootProject.ext.dependencies.runner
    // Router
    annotationProcessor rootProject.ext.dependencies.arouter_compiler
    implementation rootProject.ext.dependencies.arouter_api

    if (!rootProject.ext.asApp.toBoolean()) {
        implementation project(path: ':singlecall')
        implementation project(path: ':groupcall')
        implementation project(path: ':login-mvp-dagger')
    }
    implementation project(path: ':business-common')
//    implementation project(path: ':myapplication')
}
